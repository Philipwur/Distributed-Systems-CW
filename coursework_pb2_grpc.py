# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import coursework_pb2 as coursework__pb2


class MatrixOperationStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Addition = channel.unary_unary(
                '/MatrixOperation/Addition',
                request_serializer=coursework__pb2.Matrices_in.SerializeToString,
                response_deserializer=coursework__pb2.Matrix_out.FromString,
                )
        self.Multiplication = channel.unary_unary(
                '/MatrixOperation/Multiplication',
                request_serializer=coursework__pb2.Matrices_in.SerializeToString,
                response_deserializer=coursework__pb2.Matrix_out.FromString,
                )


class MatrixOperationServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Addition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Multiplication(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MatrixOperationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Addition': grpc.unary_unary_rpc_method_handler(
                    servicer.Addition,
                    request_deserializer=coursework__pb2.Matrices_in.FromString,
                    response_serializer=coursework__pb2.Matrix_out.SerializeToString,
            ),
            'Multiplication': grpc.unary_unary_rpc_method_handler(
                    servicer.Multiplication,
                    request_deserializer=coursework__pb2.Matrices_in.FromString,
                    response_serializer=coursework__pb2.Matrix_out.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'MatrixOperation', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MatrixOperation(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Addition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MatrixOperation/Addition',
            coursework__pb2.Matrices_in.SerializeToString,
            coursework__pb2.Matrix_out.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Multiplication(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MatrixOperation/Multiplication',
            coursework__pb2.Matrices_in.SerializeToString,
            coursework__pb2.Matrix_out.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
